deg.lim.core <- c((deg.lims.observed$degradation[deg.lims.observed$age.ad == age.lim.core[1]]), (deg.lims.observed$degradation[deg.lims.observed$age.ad == age.lim.core[2]]))
deg.lim.core
deg.lims.observed$degradation <- 1- (0.999 * (log(age.diff, base=10) / max(log(age.diff, base=10))))
colnames(deg.lims.observed) <- c("age.ad", "degradation")
plot(deg.lims.observed$degradation ~ deg.lims.observed$age.ad)
waist <- read.csv("/home/timothy/Dropbox/Tim/data/claire/data.csv")
waist$date = as.Date(waist$date)
library(mgcv)
waistM <- lm(waist ~ as.numeric(date), data=waist)
waistM <- gam(waist ~ s(as.numeric(date), k=3), data=waist)
waistPred <- data.frame(date = as.Date(seq(min(waist$date), max(waist$date), len=50)))
waistPred <- cbind(waistPred, as.data.frame(predict(waistM, newdata=waistPred, se.fit=TRUE)))
colorGrad <- colorRamp(c("#ff00ff", "#ffdf00", "#0f263d"))
pdf("/home/timothy/Dropbox/Tim/data/claire/waistPlot.pdf",
height=3.5, width=6)
par(mar=c(1.5,3,0.5,0.5), mgp=c(3,0.5,0), tcl=-0.25, ps=10, las=1)
plot(waist$waist ~ waist$date, xlim=c(18923, 18980), ylim=c(75,98),
type="n", xlab="", ylab="")
abline(h=80, lty="31")
mtext(side=2, line=1.75, las=0, text="Waist circumference (cm)")
yGrad <- seq(80, par("usr")[4], len=200)
image(y=yGrad,
x=c(par("usr")[1], par("usr")[2]),
z=matrix(200:1, ncol=200), add=TRUE, useRaster=TRUE,
col=rgb(colorGrad(seq(0,1,len=200))/255))
rect(xleft=par("usr")[1], xright=min(waistPred$date),
ybottom=par('usr')[3], ytop=par("usr")[4], border="white", col="white")
rect(xleft=par("usr")[2], xright=max(waistPred$date),
ybottom=par('usr')[3], ytop=par("usr")[4], border="white", col="white")
polygon(x=c(waistPred$date, max(waistPred$date), min(waistPred$date)),
y=c(waistPred$fit + 1.96 * waistPred$se.fit, par("usr")[4], par("usr")[4]),
border="white", col="white")
polygon(x=c(waistPred$date, max(waistPred$date), min(waistPred$date)),
y=c(waistPred$fit - 1.96 * waistPred$se.fit, par("usr")[3], par("usr")[3]),
border="white", col="white")
#abline(v=min(waistPred$date) + 8*7)
segments(x0=min(waistPred$date),
x1=min(waistPred$date) + 8*7,
y0=waistPred$fit[1],
y1=80, col="grey60", lwd=2)
abline(h=80, lwd=2, col=rgb(colorGrad(1-(80 - min(yGrad)) / (max(yGrad) - min(yGrad)))/255),
lty="31")
text(y=80, x=par("usr")[2]-2, pos=3, labels="Goal",
col=rgb(colorGrad(1-(80 - min(yGrad)) / (max(yGrad) - min(yGrad)))/255), offset=0.25, font=2)
breadrgb <- col2rgb("#BE9962")/255
with(waist[waist$carbDays=="Y",], rect(xleft=date-0.65, xright=date+0.65,
ybottom=par("usr")[3], ytop=par('usr')[4],
border=NA, col=rgb(breadrgb[1],breadrgb[2],
breadrgb[3],0.75)))
with(waist[waist$carbDays=="Y",], text(x=date, y=par("usr")[3]+0.5, col="#6d3200",
srt=90, labels="CARB DAY", font=2, cex=1.25, adj=0))
polygon(x=c(waistPred$date, rev(waistPred$date)),
y=c(waistPred$fit - 1.96 * waistPred$se.fit,
rev(waistPred$fit + 1.96 * waistPred$se.fit)),
border="white", col=rgb(1,1,1,0.5))
sapply(2:nrow(waist), function(n){
segments(x0=waist$date[n-1],
x1=waist$date[n],
y0=waist$waist[n-1],
y1=waist$waist[n],
col="black")
})
segments(x0=par("usr")[1], x1=waistPred$date[nrow(waistPred)],
y0=waistPred$fit[nrow(waistPred)], waistPred$fit[nrow(waistPred)],
lty="31")
lines(waistPred$fit ~ waistPred$date, lwd=2)
points(waist$waist ~ waist$date, pch=21,
bg=rgb(colorGrad(1-(waist$waist - min(yGrad)) / (max(yGrad) - min(yGrad)))/255))
text(x=waistPred$date[nrow(waistPred)],
y=waistPred$fit[nrow(waistPred)],
labels=paste0(round((waistPred$fit[nrow(waistPred)] - waistPred$fit[1]) / waistPred$fit[1], 4)*100, "%"),
pos=4, offset=0.25, cex=0.75)
box()
dev.off()
waist <- read.csv("/home/timothy/Dropbox/Tim/data/claire/data.csv")
waist$date = as.Date(waist$date)
library(mgcv)
waistM <- lm(waist ~ as.numeric(date), data=waist)
waistM <- gam(waist ~ s(as.numeric(date), k=3), data=waist)
waistPred <- data.frame(date = as.Date(seq(min(waist$date), max(waist$date), len=50)))
waistPred <- cbind(waistPred, as.data.frame(predict(waistM, newdata=waistPred, se.fit=TRUE)))
colorGrad <- colorRamp(c("#ff00ff", "#ffdf00", "#0f263d"))
pdf("/home/timothy/Dropbox/Tim/data/claire/waistPlot.pdf",
height=3.5, width=6)
par(mar=c(1.5,3,0.5,0.5), mgp=c(3,0.5,0), tcl=-0.25, ps=10, las=1)
plot(waist$waist ~ waist$date, xlim=c(18923, 18980), ylim=c(75,98),
type="n", xlab="", ylab="")
abline(h=80, lty="31")
mtext(side=2, line=1.75, las=0, text="Waist circumference (cm)")
yGrad <- seq(80, par("usr")[4], len=200)
image(y=yGrad,
x=c(par("usr")[1], par("usr")[2]),
z=matrix(200:1, ncol=200), add=TRUE, useRaster=TRUE,
col=rgb(colorGrad(seq(0,1,len=200))/255))
rect(xleft=par("usr")[1], xright=min(waistPred$date),
ybottom=par('usr')[3], ytop=par("usr")[4], border="white", col="white")
rect(xleft=par("usr")[2], xright=max(waistPred$date),
ybottom=par('usr')[3], ytop=par("usr")[4], border="white", col="white")
polygon(x=c(waistPred$date, max(waistPred$date), min(waistPred$date)),
y=c(waistPred$fit + 1.96 * waistPred$se.fit, par("usr")[4], par("usr")[4]),
border="white", col="white")
polygon(x=c(waistPred$date, max(waistPred$date), min(waistPred$date)),
y=c(waistPred$fit - 1.96 * waistPred$se.fit, par("usr")[3], par("usr")[3]),
border="white", col="white")
#abline(v=min(waistPred$date) + 8*7)
segments(x0=min(waistPred$date),
x1=min(waistPred$date) + 8*7,
y0=waistPred$fit[1],
y1=80, col="grey60", lwd=2)
abline(h=80, lwd=2, col=rgb(colorGrad(1-(80 - min(yGrad)) / (max(yGrad) - min(yGrad)))/255),
lty="31")
text(y=80, x=par("usr")[2]-2, pos=3, labels="Goal",
col=rgb(colorGrad(1-(80 - min(yGrad)) / (max(yGrad) - min(yGrad)))/255), offset=0.25, font=2)
breadrgb <- col2rgb("#BE9962")/255
with(waist[waist$carbDays=="Y",], rect(xleft=date-0.65, xright=date+0.65,
ybottom=par("usr")[3], ytop=par('usr')[4],
border=NA, col=rgb(breadrgb[1],breadrgb[2],
breadrgb[3],0.75)))
with(waist[waist$carbDays=="Y",], text(x=date, y=par("usr")[3]+0.5, col="#6d3200",
srt=90, labels="CARB DAY", font=2, cex=1.25, adj=0))
polygon(x=c(waistPred$date, rev(waistPred$date)),
y=c(waistPred$fit - 1.96 * waistPred$se.fit,
rev(waistPred$fit + 1.96 * waistPred$se.fit)),
border="white", col=rgb(1,1,1,0.5))
sapply(2:nrow(waist), function(n){
segments(x0=waist$date[n-1],
x1=waist$date[n],
y0=waist$waist[n-1],
y1=waist$waist[n],
col="black")
})
segments(x0=par("usr")[1], x1=waistPred$date[nrow(waistPred)],
y0=waistPred$fit[nrow(waistPred)], waistPred$fit[nrow(waistPred)],
lty="31")
lines(waistPred$fit ~ waistPred$date, lwd=2)
points(waist$waist ~ waist$date, pch=21,
bg=rgb(colorGrad(1-(waist$waist - min(yGrad)) / (max(yGrad) - min(yGrad)))/255))
text(x=waistPred$date[nrow(waistPred)],
y=waistPred$fit[nrow(waistPred)],
labels=paste0(round((waistPred$fit[nrow(waistPred)] - waistPred$fit[1]) / waistPred$fit[1], 4)*100, "%"),
pos=4, offset=0.25, cex=0.75)
box()
dev.off()
waist <- read.csv("/home/timothy/Dropbox/Tim/data/claire/data.csv")
waist$date = as.Date(waist$date)
library(mgcv)
waistM <- lm(waist ~ as.numeric(date), data=waist)
waistM <- gam(waist ~ s(as.numeric(date), k=3), data=waist)
waistPred <- data.frame(date = as.Date(seq(min(waist$date), max(waist$date), len=50)))
waistPred <- cbind(waistPred, as.data.frame(predict(waistM, newdata=waistPred, se.fit=TRUE)))
colorGrad <- colorRamp(c("#ff00ff", "#ffdf00", "#0f263d"))
pdf("/home/timothy/Dropbox/Tim/data/claire/waistPlot.pdf",
height=3.5, width=6)
par(mar=c(1.5,3,0.5,0.5), mgp=c(3,0.5,0), tcl=-0.25, ps=10, las=1)
plot(waist$waist ~ waist$date, xlim=c(18923, 18980), ylim=c(75,98),
type="n", xlab="", ylab="")
abline(h=80, lty="31")
mtext(side=2, line=1.75, las=0, text="Waist circumference (cm)")
yGrad <- seq(80, par("usr")[4], len=200)
image(y=yGrad,
x=c(par("usr")[1], par("usr")[2]),
z=matrix(200:1, ncol=200), add=TRUE, useRaster=TRUE,
col=rgb(colorGrad(seq(0,1,len=200))/255))
rect(xleft=par("usr")[1], xright=min(waistPred$date),
ybottom=par('usr')[3], ytop=par("usr")[4], border="white", col="white")
rect(xleft=par("usr")[2], xright=max(waistPred$date),
ybottom=par('usr')[3], ytop=par("usr")[4], border="white", col="white")
polygon(x=c(waistPred$date, max(waistPred$date), min(waistPred$date)),
y=c(waistPred$fit + 1.96 * waistPred$se.fit, par("usr")[4], par("usr")[4]),
border="white", col="white")
polygon(x=c(waistPred$date, max(waistPred$date), min(waistPred$date)),
y=c(waistPred$fit - 1.96 * waistPred$se.fit, par("usr")[3], par("usr")[3]),
border="white", col="white")
#abline(v=min(waistPred$date) + 8*7)
segments(x0=min(waistPred$date),
x1=min(waistPred$date) + 8*7,
y0=waistPred$fit[1],
y1=80, col="grey60", lwd=2)
abline(h=80, lwd=2, col=rgb(colorGrad(1-(80 - min(yGrad)) / (max(yGrad) - min(yGrad)))/255),
lty="31")
text(y=80, x=par("usr")[2]-2, pos=3, labels="Goal",
col=rgb(colorGrad(1-(80 - min(yGrad)) / (max(yGrad) - min(yGrad)))/255), offset=0.25, font=2)
breadrgb <- col2rgb("#BE9962")/255
with(waist[waist$carbDays=="Y",], rect(xleft=date-0.65, xright=date+0.65,
ybottom=par("usr")[3], ytop=par('usr')[4],
border=NA, col=rgb(breadrgb[1],breadrgb[2],
breadrgb[3],0.75)))
with(waist[waist$carbDays=="Y",], text(x=date, y=par("usr")[3]+0.5, col="#6d3200",
srt=90, labels="CARB DAY", font=2, cex=1.25, adj=0))
polygon(x=c(waistPred$date, rev(waistPred$date)),
y=c(waistPred$fit - 1.96 * waistPred$se.fit,
rev(waistPred$fit + 1.96 * waistPred$se.fit)),
border="white", col=rgb(1,1,1,0.5))
sapply(2:nrow(waist), function(n){
segments(x0=waist$date[n-1],
x1=waist$date[n],
y0=waist$waist[n-1],
y1=waist$waist[n],
col="black")
})
segments(x0=par("usr")[1], x1=waistPred$date[nrow(waistPred)],
y0=waistPred$fit[nrow(waistPred)], waistPred$fit[nrow(waistPred)],
lty="31")
lines(waistPred$fit ~ waistPred$date, lwd=2)
points(waist$waist ~ waist$date, pch=21,
bg=rgb(colorGrad(1-(waist$waist - min(yGrad)) / (max(yGrad) - min(yGrad)))/255))
text(x=waistPred$date[nrow(waistPred)],
y=waistPred$fit[nrow(waistPred)],
labels=paste0(round((waistPred$fit[nrow(waistPred)] - waistPred$fit[1]) / waistPred$fit[1], 4)*100, "%"),
pos=4, offset=0.25, cex=0.75)
box()
dev.off()
waist <- read.csv("/home/timothy/Dropbox/Tim/data/claire/data.csv")
waist$date = as.Date(waist$date)
library(mgcv)
waistM <- lm(waist ~ as.numeric(date), data=waist)
waistM <- gam(waist ~ s(as.numeric(date), k=3), data=waist)
waistPred <- data.frame(date = as.Date(seq(min(waist$date), max(waist$date), len=50)))
waistPred <- cbind(waistPred, as.data.frame(predict(waistM, newdata=waistPred, se.fit=TRUE)))
colorGrad <- colorRamp(c("#ff00ff", "#ffdf00", "#0f263d"))
pdf("/home/timothy/Dropbox/Tim/data/claire/waistPlot.pdf",
height=3.5, width=6)
par(mar=c(1.5,3,0.5,0.5), mgp=c(3,0.5,0), tcl=-0.25, ps=10, las=1)
plot(waist$waist ~ waist$date, xlim=c(18923, 18980), ylim=c(75,98),
type="n", xlab="", ylab="")
abline(h=80, lty="31")
mtext(side=2, line=1.75, las=0, text="Waist circumference (cm)")
yGrad <- seq(80, par("usr")[4], len=200)
image(y=yGrad,
x=c(par("usr")[1], par("usr")[2]),
z=matrix(200:1, ncol=200), add=TRUE, useRaster=TRUE,
col=rgb(colorGrad(seq(0,1,len=200))/255))
rect(xleft=par("usr")[1], xright=min(waistPred$date),
ybottom=par('usr')[3], ytop=par("usr")[4], border="white", col="white")
rect(xleft=par("usr")[2], xright=max(waistPred$date),
ybottom=par('usr')[3], ytop=par("usr")[4], border="white", col="white")
polygon(x=c(waistPred$date, max(waistPred$date), min(waistPred$date)),
y=c(waistPred$fit + 1.96 * waistPred$se.fit, par("usr")[4], par("usr")[4]),
border="white", col="white")
polygon(x=c(waistPred$date, max(waistPred$date), min(waistPred$date)),
y=c(waistPred$fit - 1.96 * waistPred$se.fit, par("usr")[3], par("usr")[3]),
border="white", col="white")
#abline(v=min(waistPred$date) + 8*7)
segments(x0=min(waistPred$date),
x1=min(waistPred$date) + 8*7,
y0=waistPred$fit[1],
y1=80, col="grey60", lwd=2)
abline(h=80, lwd=2, col=rgb(colorGrad(1-(80 - min(yGrad)) / (max(yGrad) - min(yGrad)))/255),
lty="31")
text(y=80, x=par("usr")[2]-2, pos=3, labels="Goal",
col=rgb(colorGrad(1-(80 - min(yGrad)) / (max(yGrad) - min(yGrad)))/255), offset=0.25, font=2)
breadrgb <- col2rgb("#BE9962")/255
with(waist[waist$carbDays=="Y",], rect(xleft=date-0.65, xright=date+0.65,
ybottom=par("usr")[3], ytop=par('usr')[4],
border=NA, col=rgb(breadrgb[1],breadrgb[2],
breadrgb[3],0.75)))
with(waist[waist$carbDays=="Y",], text(x=date, y=par("usr")[3]+0.5, col="#6d3200",
srt=90, labels="CARB DAY", font=2, cex=1.25, adj=0))
polygon(x=c(waistPred$date, rev(waistPred$date)),
y=c(waistPred$fit - 1.96 * waistPred$se.fit,
rev(waistPred$fit + 1.96 * waistPred$se.fit)),
border="white", col=rgb(1,1,1,0.5))
sapply(2:nrow(waist), function(n){
segments(x0=waist$date[n-1],
x1=waist$date[n],
y0=waist$waist[n-1],
y1=waist$waist[n],
col="black")
})
segments(x0=par("usr")[1], x1=waistPred$date[nrow(waistPred)],
y0=waistPred$fit[nrow(waistPred)], waistPred$fit[nrow(waistPred)],
lty="31")
lines(waistPred$fit ~ waistPred$date, lwd=2)
points(waist$waist ~ waist$date, pch=21,
bg=rgb(colorGrad(1-(waist$waist - min(yGrad)) / (max(yGrad) - min(yGrad)))/255))
text(x=waistPred$date[nrow(waistPred)],
y=waistPred$fit[nrow(waistPred)],
labels=paste0(round((waistPred$fit[nrow(waistPred)] - waistPred$fit[1]) / waistPred$fit[1], 4)*100, "%"),
pos=4, offset=0.25, cex=0.75)
box()
dev.off()
waist <- read.csv("/home/timothy/Dropbox/Tim/data/claire/data.csv")
waist$date = as.Date(waist$date)
library(mgcv)
waistM <- lm(waist ~ as.numeric(date), data=waist)
waistM <- gam(waist ~ s(as.numeric(date), k=3), data=waist)
waistPred <- data.frame(date = as.Date(seq(min(waist$date), max(waist$date), len=50)))
waistPred <- cbind(waistPred, as.data.frame(predict(waistM, newdata=waistPred, se.fit=TRUE)))
colorGrad <- colorRamp(c("#ff00ff", "#ffdf00", "#0f263d"))
pdf("/home/timothy/Dropbox/Tim/data/claire/waistPlot.pdf",
height=3.5, width=6)
par(mar=c(1.5,3,0.5,0.5), mgp=c(3,0.5,0), tcl=-0.25, ps=10, las=1)
plot(waist$waist ~ waist$date, xlim=c(18923, 18980), ylim=c(75,98),
type="n", xlab="", ylab="")
abline(h=80, lty="31")
mtext(side=2, line=1.75, las=0, text="Waist circumference (cm)")
yGrad <- seq(80, par("usr")[4], len=200)
image(y=yGrad,
x=c(par("usr")[1], par("usr")[2]),
z=matrix(200:1, ncol=200), add=TRUE, useRaster=TRUE,
col=rgb(colorGrad(seq(0,1,len=200))/255))
rect(xleft=par("usr")[1], xright=min(waistPred$date),
ybottom=par('usr')[3], ytop=par("usr")[4], border="white", col="white")
rect(xleft=par("usr")[2], xright=max(waistPred$date),
ybottom=par('usr')[3], ytop=par("usr")[4], border="white", col="white")
polygon(x=c(waistPred$date, max(waistPred$date), min(waistPred$date)),
y=c(waistPred$fit + 1.96 * waistPred$se.fit, par("usr")[4], par("usr")[4]),
border="white", col="white")
polygon(x=c(waistPred$date, max(waistPred$date), min(waistPred$date)),
y=c(waistPred$fit - 1.96 * waistPred$se.fit, par("usr")[3], par("usr")[3]),
border="white", col="white")
#abline(v=min(waistPred$date) + 8*7)
segments(x0=min(waistPred$date),
x1=min(waistPred$date) + 8*7,
y0=waistPred$fit[1],
y1=80, col="grey60", lwd=2)
abline(h=80, lwd=2, col=rgb(colorGrad(1-(80 - min(yGrad)) / (max(yGrad) - min(yGrad)))/255),
lty="31")
text(y=80, x=par("usr")[2]-2, pos=3, labels="Goal",
col=rgb(colorGrad(1-(80 - min(yGrad)) / (max(yGrad) - min(yGrad)))/255), offset=0.25, font=2)
breadrgb <- col2rgb("#BE9962")/255
with(waist[waist$carbDays=="Y",], rect(xleft=date-0.65, xright=date+0.65,
ybottom=par("usr")[3], ytop=par('usr')[4],
border=NA, col=rgb(breadrgb[1],breadrgb[2],
breadrgb[3],0.75)))
with(waist[waist$carbDays=="Y",], text(x=date, y=par("usr")[3]+0.5, col="#6d3200",
srt=90, labels="CARB DAY", font=2, cex=1.25, adj=0))
polygon(x=c(waistPred$date, rev(waistPred$date)),
y=c(waistPred$fit - 1.96 * waistPred$se.fit,
rev(waistPred$fit + 1.96 * waistPred$se.fit)),
border="white", col=rgb(1,1,1,0.5))
sapply(2:nrow(waist), function(n){
segments(x0=waist$date[n-1],
x1=waist$date[n],
y0=waist$waist[n-1],
y1=waist$waist[n],
col="black")
})
segments(x0=par("usr")[1], x1=waistPred$date[nrow(waistPred)],
y0=waistPred$fit[nrow(waistPred)], waistPred$fit[nrow(waistPred)],
lty="31")
lines(waistPred$fit ~ waistPred$date, lwd=2)
points(waist$waist ~ waist$date, pch=21,
bg=rgb(colorGrad(1-(waist$waist - min(yGrad)) / (max(yGrad) - min(yGrad)))/255))
text(x=waistPred$date[nrow(waistPred)],
y=waistPred$fit[nrow(waistPred)],
labels=paste0(round((waistPred$fit[nrow(waistPred)] - waistPred$fit[1]) / waistPred$fit[1], 4)*100, "%"),
pos=4, offset=0.25, cex=0.75)
box()
dev.off()
?gamm4
library(gamm4)
?gamm4
?glmmTMB
library(glmmTMB)
install.pcakges("TMB", type="source")
install.packges("TMB", type="source")
install.packages("TMB", type="source")
install.packages("TMB", type = "source")
aTab <- read.csv("./pandNet.csv", stringsAsFactors = FALSE)
nodes <- read.csv("./nodes.csv", stringsAsFactors = FALSE)
# convert table into graph
# convert table into graph
library(igraph)
rm(list=ls())
library(readxl)
library(d3r)
library(jsonlite)
setwd("/home/timothy/Dropbox/Tim/Post-doc/Presentations/School Lab Speed Talk")
aTab <- read.csv("./pandNet.csv", stringsAsFactors = FALSE)
nodes <- read.csv("./nodes.csv", stringsAsFactors = FALSE)
# convert table into graph
library(igraph)
network=graph_from_data_frame(d=aTab, directed=F)
V(network)$cat = nodes$Cat[match(V(network)$name, nodes$Node)]
V(network)$picPath = nodes$picPath[match(V(network)$name, nodes$Node)]
as.factor(V(network)$cat)
aTab <- read.csv("./pandNet.csv", stringsAsFactors = FALSE)
nodes <- read.csv("./nodes.csv", stringsAsFactors = FALSE)
# convert table into graph
library(igraph)
network=graph_from_data_frame(d=aTab, directed=F)
V(network)$cat = nodes$Cat[match(V(network)$name, nodes$Node)]
V(network)$picPath = nodes$picPath[match(V(network)$name, nodes$Node)]
V(network)$count = c(30,15,15,15,15,15,30,30)[as.factor(V(network)$cat)]
#V(network)$count[V(network)] =
V(network)$linkStr = c(5,1,1,1,1,5,5)[as.factor(V(network)$cat)]
V(network)$textAbove = c(1,0,0,0,0,1,1)[as.factor(V(network)$cat)]
V(network)$centre = c(1,0,0,0,0,0,0)[as.factor(V(network)$cat)]
#V(network)$primary = "#324158"
V(network)$primary = c("#FF0000", "#00FF00", "#808080","#0000FF", "#00FFFF", "#000000", "#000000")[as.factor(V(network)$cat)]
V(network)$label = V(network)$name
V(network)$shadow = "rgb(255, 255, 255) 2px 0px 0px, rgb(255, 255, 255) 1.75517px 0.958851px 0px, rgb(255, 255, 255) 1.0806px 1.68294px 0px, rgb(255, 255, 255) 0.141474px 1.99499px 0px, rgb(255, 255, 255) -0.832294px 1.81859px 0px, rgb(255, 255, 255) -1.60229px 1.19694px 0px, rgb(255, 255, 255) -1.97999px 0.28224px 0px, rgb(255, 255, 255) -1.87291px -0.701566px 0px, rgb(255, 255, 255) -1.30729px -1.51361px 0px, rgb(255, 255, 255) -0.421592px -1.95506px 0px, rgb(255, 255, 255) 0.567324px -1.91785px 0px, rgb(255, 255, 255) 1.41734px -1.41108px 0px, rgb(255, 255, 255) 1.92034px -0.558831px 0px"
V(network)$cat = 0
V(network)$url = NA
V(network)$offlabel = V(network)$name
V(network)$width = 1
V(network)$strokeCol = "#000000"
# Transform it in a JSON format for d3.js
data_json <- d3_igraph(network)
# Save this file
write(data_json, "./data.json")
aTab <- read.csv("./pandNet.csv", stringsAsFactors = FALSE)
nodes <- read.csv("./nodes.csv", stringsAsFactors = FALSE)
# convert table into graph
library(igraph)
network=graph_from_data_frame(d=aTab, directed=F)
V(network)$cat = nodes$Cat[match(V(network)$name, nodes$Node)]
V(network)$picPath = nodes$picPath[match(V(network)$name, nodes$Node)]
V(network)$count = c(30,15,15,15,15,15,30,30)[as.factor(V(network)$cat)]
cbind(V(network)$cat, V(network)$count)
aTab <- read.csv("./pandNet.csv", stringsAsFactors = FALSE)
nodes <- read.csv("./nodes.csv", stringsAsFactors = FALSE)
# convert table into graph
library(igraph)
network=graph_from_data_frame(d=aTab, directed=F)
V(network)$cat = nodes$Cat[match(V(network)$name, nodes$Node)]
V(network)$picPath = nodes$picPath[match(V(network)$name, nodes$Node)]
V(network)$count = c(30,15,15,15,15,30,30)[as.factor(V(network)$cat)]
#V(network)$count[V(network)] =
V(network)$linkStr = c(5,1,1,1,1,5,5)[as.factor(V(network)$cat)]
V(network)$textAbove = c(1,0,0,0,0,1,1)[as.factor(V(network)$cat)]
V(network)$centre = c(1,0,0,0,0,0,0)[as.factor(V(network)$cat)]
#V(network)$primary = "#324158"
V(network)$primary = c("#FF0000", "#00FF00", "#808080","#0000FF", "#00FFFF", "#000000", "#000000")[as.factor(V(network)$cat)]
V(network)$label = V(network)$name
V(network)$shadow = "rgb(255, 255, 255) 2px 0px 0px, rgb(255, 255, 255) 1.75517px 0.958851px 0px, rgb(255, 255, 255) 1.0806px 1.68294px 0px, rgb(255, 255, 255) 0.141474px 1.99499px 0px, rgb(255, 255, 255) -0.832294px 1.81859px 0px, rgb(255, 255, 255) -1.60229px 1.19694px 0px, rgb(255, 255, 255) -1.97999px 0.28224px 0px, rgb(255, 255, 255) -1.87291px -0.701566px 0px, rgb(255, 255, 255) -1.30729px -1.51361px 0px, rgb(255, 255, 255) -0.421592px -1.95506px 0px, rgb(255, 255, 255) 0.567324px -1.91785px 0px, rgb(255, 255, 255) 1.41734px -1.41108px 0px, rgb(255, 255, 255) 1.92034px -0.558831px 0px"
V(network)$cat = 0
V(network)$url = NA
V(network)$offlabel = V(network)$name
V(network)$width = 1
V(network)$strokeCol = "#000000"
# Transform it in a JSON format for d3.js
data_json <- d3_igraph(network)
# Save this file
write(data_json, "./data.json")
aTab <- read.csv("./pandNet.csv", stringsAsFactors = FALSE)
nodes <- read.csv("./nodes.csv", stringsAsFactors = FALSE)
# convert table into graph
library(igraph)
network=graph_from_data_frame(d=aTab, directed=F)
V(network)$cat = nodes$Cat[match(V(network)$name, nodes$Node)]
V(network)$picPath = nodes$picPath[match(V(network)$name, nodes$Node)]
V(network)$count = c(30,15,15,15,15,30,22)[as.factor(V(network)$cat)]
#V(network)$count[V(network)] =
V(network)$linkStr = c(5,1,1,1,1,5,5)[as.factor(V(network)$cat)]
V(network)$textAbove = c(1,0,0,0,0,1,1)[as.factor(V(network)$cat)]
V(network)$centre = c(1,0,0,0,0,0,0)[as.factor(V(network)$cat)]
#V(network)$primary = "#324158"
V(network)$primary = c("#FF0000", "#00FF00", "#808080","#0000FF", "#00FFFF", "#000000", "#000000")[as.factor(V(network)$cat)]
V(network)$label = V(network)$name
V(network)$shadow = "rgb(255, 255, 255) 2px 0px 0px, rgb(255, 255, 255) 1.75517px 0.958851px 0px, rgb(255, 255, 255) 1.0806px 1.68294px 0px, rgb(255, 255, 255) 0.141474px 1.99499px 0px, rgb(255, 255, 255) -0.832294px 1.81859px 0px, rgb(255, 255, 255) -1.60229px 1.19694px 0px, rgb(255, 255, 255) -1.97999px 0.28224px 0px, rgb(255, 255, 255) -1.87291px -0.701566px 0px, rgb(255, 255, 255) -1.30729px -1.51361px 0px, rgb(255, 255, 255) -0.421592px -1.95506px 0px, rgb(255, 255, 255) 0.567324px -1.91785px 0px, rgb(255, 255, 255) 1.41734px -1.41108px 0px, rgb(255, 255, 255) 1.92034px -0.558831px 0px"
V(network)$cat = 0
V(network)$url = NA
V(network)$offlabel = V(network)$name
V(network)$width = 1
V(network)$strokeCol = "#000000"
# Transform it in a JSON format for d3.js
data_json <- d3_igraph(network)
# Save this file
write(data_json, "./data.json")
aTab <- read.csv("./pandNet.csv", stringsAsFactors = FALSE)
nodes <- read.csv("./nodes.csv", stringsAsFactors = FALSE)
# convert table into graph
library(igraph)
network=graph_from_data_frame(d=aTab, directed=F)
V(network)$cat = nodes$Cat[match(V(network)$name, nodes$Node)]
V(network)$picPath = nodes$picPath[match(V(network)$name, nodes$Node)]
V(network)$count = c(30,15,15,15,15,22,30)[as.factor(V(network)$cat)]
#V(network)$count[V(network)] =
V(network)$linkStr = c(5,1,1,1,1,5,5)[as.factor(V(network)$cat)]
V(network)$textAbove = c(1,0,0,0,0,1,1)[as.factor(V(network)$cat)]
V(network)$centre = c(1,0,0,0,0,0,0)[as.factor(V(network)$cat)]
#V(network)$primary = "#324158"
V(network)$primary = c("#FF0000", "#00FF00", "#808080","#0000FF", "#00FFFF", "#000000", "#000000")[as.factor(V(network)$cat)]
V(network)$label = V(network)$name
V(network)$shadow = "rgb(255, 255, 255) 2px 0px 0px, rgb(255, 255, 255) 1.75517px 0.958851px 0px, rgb(255, 255, 255) 1.0806px 1.68294px 0px, rgb(255, 255, 255) 0.141474px 1.99499px 0px, rgb(255, 255, 255) -0.832294px 1.81859px 0px, rgb(255, 255, 255) -1.60229px 1.19694px 0px, rgb(255, 255, 255) -1.97999px 0.28224px 0px, rgb(255, 255, 255) -1.87291px -0.701566px 0px, rgb(255, 255, 255) -1.30729px -1.51361px 0px, rgb(255, 255, 255) -0.421592px -1.95506px 0px, rgb(255, 255, 255) 0.567324px -1.91785px 0px, rgb(255, 255, 255) 1.41734px -1.41108px 0px, rgb(255, 255, 255) 1.92034px -0.558831px 0px"
V(network)$cat = 0
V(network)$url = NA
V(network)$offlabel = V(network)$name
V(network)$width = 1
V(network)$strokeCol = "#000000"
# Transform it in a JSON format for d3.js
data_json <- d3_igraph(network)
# Save this file
write(data_json, "./data.json")
rm(list=ls())
library(readxl)
library(d3r)
library(jsonlite)
setwd("/home/timothy/Dropbox/Tim/Post-doc/Presentations/School Lab Speed Talk")
# Make graph ####
aTab <- read.csv("./pandNet.csv", stringsAsFactors = FALSE)
nodes <- read.csv("./nodes.csv", stringsAsFactors = FALSE)
# convert table into graph
library(igraph)
network=graph_from_data_frame(d=aTab, directed=F)
V(network)$cat = nodes$Cat[match(V(network)$name, nodes$Node)]
V(network)$picPath = nodes$picPath[match(V(network)$name, nodes$Node)]
cbind(V(network)$cat, V(network)$count)
setwd("/home/timothy/Dropbox/Tim/Post-doc/Presentations/School Lab Speed Talk")
# Make graph ####
aTab <- read.csv("./pandNet.csv", stringsAsFactors = FALSE)
nodes <- read.csv("./nodes.csv", stringsAsFactors = FALSE)
# convert table into graph
library(igraph)
network=graph_from_data_frame(d=aTab, directed=F)
V(network)$cat = nodes$Cat[match(V(network)$name, nodes$Node)]
V(network)$picPath = nodes$picPath[match(V(network)$name, nodes$Node)]
V(network)$count = c(30,15,15,15,15,22,30)[as.factor(V(network)$cat)]
cbind(V(network)$cat, V(network)$count)
cbind(V(network)$cat, V(network)$count, V(network)$name)
